#! /bin/sh

# Parse command-line
do_quiet=yes
do_timing=no
while [ "$#" -gt 0 ]; do
    arg="$1"; shift
    case "$arg" in
	--verbose)
	    do_quiet=no
	    ;;
        --timing)
            do_timing=yes
            ;;
        --quiet)
            echo "$0: warning: --quiet is now the default mode and is ignored"
            ;;
        *)
	    echo "$0: unrecognized argument: $arg" >&2
	    exit 1
	    ;;
    esac
done

# Debugging output is provided using the -x option as in "#! /bin/sh -x"

# DQ (12/22/2005): remove the autoconf caches
rm -rf autom4te.cache

# JJW (10/5/2008): force glibtoolize on Mac, even for external releases where
# it wouldn't otherwise be needed (the files are there, they just don't work
# when linking in Java)
# JJW (11/8/2008): force libtoolize everywhere, and prefer libtoolize to
# glibtoolize if it is present (libltdl is missing on ninjai, so I need to use
# my own libtool installation)
# DQ (2/10/2009): Must use "/Users/dquinlan/local/libtool-install/bin/libtoolize --force --copy --ltdl --automake"
# the first time.
if which libtoolize > /dev/null; then
  libtoolize --force --copy --ltdl --automake
elif which glibtoolize > /dev/null; then
  glibtoolize --force --copy --ltdl --automake
fi

# DQ (11/23/2008): Added message to make users less afraid of warnings...
echo "*******************************************************************************************"
echo "Note that due to ROSE compatibility with libtool 1.5 and 2.0, some warnings will be output."
echo "These warnings come from configure.in and aclocal.m4, and can be safely ignored."
echo ""
echo "Rose Project Management."
echo "*******************************************************************************************"

# DQ (9/5/2009): Added output to permit debugging on NMI machines
echo "ACLOCAL_INCLUDES = $ACLOCAL_INCLUDES"

# DJH (20 July 2009): Some macros may be installed in non-standard locations
# (e.g. libxml's on NMI build machines)
aclocal -I ./config -I ./acmacros -I /usr/share/aclocal $ACLOCAL_INCLUDES || : exit 1

# autoheader --warnings=obsolete,all || : exit 1
autoheader || : exit 1

# autoconf --warnings=syntax,obsolete,all || : exit 1
autoconf || : exit 1

# automake -a -c --include-deps --foreign --verbose || : exit 1
# automake -a -c -i --foreign $AUTOMAKE_FLAGS || : exit 1
# automake -a -c -i --foreign |& grep -v "is not a standard library name" || : exit 1
# automake -a -c -i --foreign || : exit 1
automake -a -c -i 2>&1 | grep -v "is not a standard library name" 1>&2 || : exit 1

# Automake manual says that if we use AM_CONFIG_HEADER we have to build the stamp-h.in files
touch stamp-h.in  || : exit 1
touch stamp-h1.in || : exit 1

# Do the same steps in libltdl
# (cd libltdl && aclocal && automake --add-missing && autoconf)
# We can't reconfigure their code yet (autoconf too old)
# (cd src/3rdPartyLibraries/libharu-2.1.0 && autoreconf)

# When timing is selected, add a "time" command to the front of the
# compiles.  This must be done before the --quiet handler below is
# run to get the right output command.
if [ "$do_timing" = "yes" ]; then
    find . -name Makefile.in | grep -v libharu | grep -v libltdl | xargs sed -i~ \
	-e "s:^\(LT\)\{0,1\}\(CXX\)\{0,1\}COMPILE =:& echo \"\`pwd\`/\$@\" >> `pwd`/compile_times; /usr/bin/time -o `pwd`/compile_times -a :"
fi

# Rewrite a couple of makefile rules to be less verbose so (1) we can actually see the warning messages
# and (2) XEmacs doesn't get regexp stack overflows when parsing compiler output.
#
# Note:
#     The '$(CXX)...' commands must be replaced also because automake generates them for *.o targets that depend on a *.C that
#     includes a directory component. For example, the automake rule:
#          rdis_SOURCES=RDis/main.C
#     generates a Makefile rule like:
#          main.o: RDis/main.C
#                  $(CXX) $(DEFS) ....... `test -f 'RDis/main.C' || echo '$(srcdir)/'`RDis/main.C
#     It seems that this might be an error on the part of automake since it bypasses libtool. [RPM 2009-04-04]
#
if [ "$do_quiet" = "yes" ]; then
    find . -name Makefile.in | grep -v libharu | grep -v libltdl | xargs sed -i~ \
	-e '/echo.*COMPILE/!s/^\(LT\)\{0,1\}\(CXX\)\{0,1\}COMPILE =/& @echo "  COMPILE $@";/' \
	-e '/echo.*LINK/!s/^\(CXX\)\{0,1\}LINK =/& @echo "  LINK    $@";/'       \
	-e '/echo.*COMPILE/!s/^\t\$(CXX)/\t@echo "  COMPILE $@"; $(CXX)/' \
	-e '/LIBTOOL.*quiet/!s/@LIBTOOL@/& --quiet/g'
fi

echo "***** BUILD TERMINATED NORMALLY *****"

# run build or better yet RUN_ME_AFTER_CHECKOUT.sh
# echo "Call tests/performanceTests/BenchmarkBase/RUN_ME_AFTER_CHECKOUT.sh ..."
# cd tests/PerformanceTests/BenchmarkBase; RUN_ME_AFTER_CHECKOUT.sh; 
# cd ../../..;

