//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                         THIS FILE IS MACHINE GENERATED  --  DO NOT MODIFY
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// This file was generated by Rosebud
//     ./rosebud --no-locations --backend=sawyer --serializer=none
//         --sawyer-generated=/home/matzke/rose-wip/rose/src/generated/Rose/Sarif --sawyer-header-prefix=rose/Rose/Sarif
//
// See documentation for the ::Rosebud namespace for information about the input language and how to best run
// the commands to (re)generate this file. See `rosebud --help` for documentation about command-line switches.
//
// The ::Rosebud namespace might be documented at one of these places:
//     https://rpm.is/rose
//     http://rosecompiler.org/ROSE_HTML_Reference/index.html
//
#ifndef ROSE_Sarif_Node_H
#define ROSE_Sarif_Node_H

#include <featureTests.h>
#ifdef ROSE_ENABLE_SARIF
#include <Sawyer/Tree.h>
#include <Rose/Sarif/BasicTypes.h>
#include <Rose/Sarif/NodeDeclarations.h>

namespace Rose {
namespace Sarif {

/** Base class for Sarif nodes. */
class Node: public Sawyer::Tree::Vertex<Node> {
public:
    // Automatically generated; do not modify!
    /** Shared-ownership pointer to @ref Node.
     *
     *  @{ */
    using Ptr = NodePtr;
    using ConstPtr = NodeConstPtr;
    /** @} */

public:
    /** Emit this node and its children as JSON.
     *
     *  Returns true if this node produced (or tried to produce) any output, false if not. */
    virtual bool emit(std::ostream&) = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Generated constructors, etc.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected:
    /** Default constructor. */
    Node();

public:
    ~Node();
};

} // namespace
} // namespace
#endif

#endif // include once
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                         THIS FILE IS MACHINE GENERATED  --  DO NOT MODIFY
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
