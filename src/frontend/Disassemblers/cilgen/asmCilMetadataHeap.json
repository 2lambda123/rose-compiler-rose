  {
    "Baseclass": "AsmCilDataStream",
    "Fields": [
      {
        "Doc": "4 reserved bytes",
        "Init": "readExpected(read32bitValue, buf, index, 0)",
        "Name": "ReservedAlwaysZero",
        "Type": "uint32_t"
      },
      {
        "Doc": "a 1-byte constant.",
        "Init": "read8bitValue(buf,index)",
        "Name": "MajorVersion",
        "Type": "uint8_t"
      },
      {
        "Doc": "a 1-byte constant.",
        "Init": "read8bitValue(buf,index)",
        "Name": "MinorVersion",
        "Type": "uint8_t"
      },
      {
        "Doc": "a 1-byte constant indicating the index sizes of streams.",
        "Init": "read8bitValue(buf,index)",
        "Name": "HeapSizes",
        "Type": "uint8_t"
      },
      {
        "Doc": "a 1-byte constant.",
        "Init": "readExpected(read8bitValue,buf,index,1)",
        "Name": "ReservedAlwaysOne",
        "Type": "uint8_t"
      },
      {
        "Doc": "a 4-byte value indicating which metadata tables are present.",
        "Init": "read64bitValue(buf,index);  std::vector<int8_t> posInRowVector = computePositionInRowVector(get_Valid())",
        "Name": "Valid",
        "Type": "uint64_t"
      },
      {
        "Doc": "a 4-byte value.",
        "Init": "read64bitValue(buf,index)",
        "Name": "Sorted",
        "Type": "uint64_t"
      },
      {
        "Doc": "a vector indicating how many rows the present tables contain.",
        "Init": "readVector(read32bitValue, Rose::BitOps::nSet(get_Valid()), buf, index)",
        "Name": "NumberOfRows",
        "Type": "std::vector<uint32_t>"
      },
      {
        "Doc": "precomputed flags that determine whether a metadata reference is stored as 2 or 4 byte value in the file.",
        "Init": "computeDataSizeFlags(get_HeapSizes(), posInRowVector, get_NumberOfRows())",
        "Name": "DataSizeFlags",
        "Type": "uint64_t"
      }
    ],
    "Tables": [
      {
        "Name": "assembly",
        "Type": "SgAsmCilAssembly"
      },
      {
        "Name": "assemblyProcessor",
        "Type": "SgAsmCilAssemblyProcessor"
      },
      {
        "Name": "assemblyOS",
        "Type": "SgAsmCilAssemblyOS"
      },
      {
        "Name": "assemblyRef",
        "Type": "SgAsmCilAssemblyRef"
      },
      {
        "Name": "assemblyRefProcessor",
        "Type": "SgAsmCilAssemblyRefProcessor"
      },
      {
        "Name": "assemblyRefOS",
        "Type": "SgAsmCilAssemblyRefOS"
      },
      {
        "Name": "classLayout",
        "Type": "SgAsmCilClassLayout"
      },
      {
        "Name": "constant",
        "Type": "SgAsmCilConstant"
      },
      {
        "Name": "customAttribute",
        "Type": "SgAsmCilCustomAttribute"
      },
      {
        "Name": "declSecurity",
        "Type": "SgAsmCilDeclSecurity"
      },
      {
        "Name": "eventMap",
        "Type": "SgAsmCilEventMap"
      },
      {
        "Name": "event",
        "Type": "SgAsmCilEvent"
      },
      {
        "Name": "exportedType",
        "Type": "SgAsmCilExportedType"
      },
      {
        "Name": "field",
        "Type": "SgAsmCilField"
      },
      {
        "Name": "fieldLayout",
        "Type": "SgAsmCilFieldLayout"
      },
      {
        "Name": "fieldMarshal",
        "Type": "SgAsmCilFieldMarshal"
      },
      {
        "Name": "fieldRVA",
        "Type": "SgAsmCilFieldRVA"
      },
      {
        "Name": "file",
        "Type": "SgAsmCilFile"
      },
      {
        "Name": "genericParam",
        "Type": "SgAsmCilGenericParam"
      },
      {
        "Name": "genericParamConstraint",
        "Type": "SgAsmCilGenericParamConstraint"
      },
      {
        "Name": "implMap",
        "Type": "SgAsmCilImplMap"
      },
      {
        "Name": "interfaceImpl",
        "Type": "SgAsmCilInterfaceImpl"
      },
      {
        "Name": "manifestResource",
        "Type": "SgAsmCilManifestResource"
      },
      {
        "Name": "memberRef",
        "Type": "SgAsmCilMemberRef"
      },
      {
        "Name": "methodDef",
        "Type": "SgAsmCilMethodDef"
      },
      {
        "Name": "methodImpl",
        "Type": "SgAsmCilMethodImpl"
      },
      {
        "Name": "methodSemantics",
        "Type": "SgAsmCilMethodSemantics"
      },
      {
        "Name": "methodSpec",
        "Type": "SgAsmCilMethodSpec"
      },
      {
        "Name": "module",
        "Type": "SgAsmCilModule"
      },
      {
        "Name": "moduleRef",
        "Type": "SgAsmCilModuleRef"
      },
      {
        "Name": "nestedClass",
        "Type": "SgAsmCilNestedClass"
      },
      {
        "Name": "param",
        "Type": "SgAsmCilParam"
      },
      {
        "Name": "property",
        "Type": "SgAsmCilProperty"
      },
      {
        "Name": "propertyMap",
        "Type": "SgAsmCilPropertyMap"
      },
      {
        "Name": "standAloneSig",
        "Type": "SgAsmCilStandAloneSig"
      },
      {
        "Name": "typeDef",
        "Type": "SgAsmCilTypeDef"
      },
      {
        "Name": "typeRef",
        "Type": "SgAsmCilTypeRef"
      },
      {
        "Name": "typeSpec",
        "Type": "SgAsmCilTypeSpec"
      }
    ],
    "Name" : "AsmCilMetadataHeap"
  }
