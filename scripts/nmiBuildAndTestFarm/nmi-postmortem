#!/usr/bin/env ruby

require 'fileutils'


NmiHostsFile = "#{ENV['HOME']}/.nmi-hosts"


def check_host!
    host = `hostname -f`.chomp

    unless host =~ %r{cs\.wisc\.edu}
        puts "
            Your host #{host} does not seem to be on the cs.wisc.edu domain.
            Are you sure you're running nmi-postmortem from an nmi submit host?
        ".gsub( /^[ \t]\s*/, '' )

        exit 1
    end
end


def args!
    if ARGV.size != 1
         puts "
            Usage: #{File.basename( __FILE__ )} <runid>
         ".gsub( /^\s+/, '' )

         exit 1
    end

    return ARGV.first
end

def setup_ssh!( host )
    FileUtils.touch NmiHostsFile
    hosts = File.readlines( NmiHostsFile ).map{|l| l.chomp }
    return true if hosts.include? host

    puts "

        Host #{host} is not known to have been set up.  I will now do this for
        you.  You will be asked to enter the password for the #{ENV['USER']}
        account twice.  This step will not be necessary for future postmortems
        of runs on this host.

    ".gsub( /^[ \t]\s*/, '' )
    system [
        "ssh #{host} '#{[
                "/bin/sh /etc/profile.d/makehomedir.sh",
                "mkdir -p $HOME/.ssh",
                "chmod 700 $HOME/.ssh",
            ].join( " && " )}'",
        "scp #{ENV['HOME']}/.ssh/id_rsa.pub #{host}:~/.ssh/authorized_keys"
    ].join( '&&' )
    return false unless $?.success?

    File.open( NmiHostsFile, 'a' ) {|f| f.puts host }

    true
end

def get_runhost( run_id )
    url = "http://localhost/nmi/index.php?page=results/runDetails&runid=#{run_id}&MetronomeSessID=qhr7buvggpva74m3kf04t8h6f1&opt_project=rose+compiler"
    response = `wget -O - '#{url}' 2> /dev/null`
    response =~ %r{remote_task.*?<td>.*?<a.*?"View Host Information".*?>(.*?)</a>.*?</td>}m

    $1
end

def main
    check_host!
    run_id = args!

    puts "Downloading run host information from nmi website"
    run_host = get_runhost( run_id )
    unless setup_ssh! run_host
        puts "

            Error setting up #{run_host}!  I was either unable to setup the home
            directory or $HOME/.ssh.  Either way, nmi-postmortem cannot
            continue.  Please report the error.  In the meantime, you can
            continue manually by doing the following:

            copy the file ~/.ssh/id_rsa.pub (on this machine) to
            #{run_host}:~/.ssh/authorized_keys
            
            ensure that the remote .ssh directory has mode 700.

            re-run nmi-postmortem.  If you have done this, but nmi-postmortem
            still complains, add the line:
                #{run_host}
            to the file ~/.nmi-hosts on this machine.

            You should be able to accomplish the above with the following commands:

                ssh #{run_host}
                # on #{run_host}
                mkdir .ssh
                chmod 700 .ssh
                exit

                # back on this machine
                scp #{ENV['HOME']}/.ssh/id_rsa.pub #{run_host}:~/.ssh/authorized_keys

                # re-run nmi-postmortem
                nmi-postmortem #{run_id}

        ".gsub( /^[ \t]\s{11}/, '' )
        exit 1
    end

    run_dir = (
        `nmi_rundir #{run_id}` =~ /\d+: (.*)/;
        $1
    )

    puts "Copying and extracting results.tar.gz and setting up .nmi-postmortem"
    system [
        "ssh #{run_host} 'rm -fr run; mkdir -p run; mkdir -p .ssh'",
        "scp #{run_dir}/userdir/nmi*/results.tar.gz #{run_host}:run/ > /dev/null 2>/dev/null",
        "ssh #{run_host} 'cd run && tar xfz results.tar.gz'",
        %Q{ssh #{run_host} 'touch .bashrc; grep -q .nmi-postmortem .bashrc || echo "if [ -f .nmi-postmortem ]; then source .nmi-postmortem; fi" >> .bashrc'},
        %Q{ssh #{run_host} 'echo "cd run && source env.sh" > .nmi-postmortem'},
    ].join( " && " )

    puts "

        Connecting to the run host #{run_host}.  You will be placed into the run
        directory and the environment sourced.

    ".gsub( /^[ \t]\s*/, '' )
    exec "ssh #{run_host}"
end


main if __FILE__ == $0

# vim:et sta ai sw=4 ts=4:
