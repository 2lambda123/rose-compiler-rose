#!/bin/bash
#
# This is the launcher for smgit.  It just runs the "smgit" perl script that it finds in the "origin/master"
# branch of the Git repository containing your current working directory.
#
# For convenience, install this launcher shell script as "smgit" somewhere in your $PATH (I put it in ~/bin
# on my system).  Then whenever you run a command like "smgit status" this launcher will make sure you're
# using the most recent, fully tested version of smgit.
####################################################################################################################

# Parse command-line options for the launcher
branch=origin/master
while [ "$#" -gt 0 ]; do
    case "$1" in
	--) shift; break ;;
	--branch=*) branch="${1#--branch=}"; shift ;;
	*) break ;;
    esac
done


# Find top-level ROSE repo. These two functions are copied straight from smgit (only the "die" is modified)
rose=$(perl -e '
    use Cwd;
    use strict;

    # Returns true if specified directory looks like it is the top of ROSE
    sub is_top_of_rose {
      my($dir) = @_;
      return unless -d $dir && -d "$dir/.git";
      return unless open MODULES, "$dir/.gitmodules";
      my $has_edg = grep {m(^\[\s*submodule\s+\"src/frontend/CxxFrontend/EDG\"\s*]\s*$)} <MODULES>;
      close MODULES;
      return $has_edg;
    }

    # Returns absolute directory name for top of ROSE repo.  Your CWD must be somewhere inside ROSE to start with.
    sub top_of_rose {
      my @comps = split /\//, getcwd;
      while (@comps) {
	my $s = join "/", @comps;
	return $s if is_top_of_rose $s;
	pop @comps;
      }
      die "smgit_launcher: cannot find top of ROSE source tree (cwd=@{[getcwd]})\n";
    }

    print top_of_rose;
')

if [ ! -d "$rose" ]; then
    #     --------------------------------------------------------------------------------
    echo "    Your current working directory is apparently not in a ROSE Git repository."
    echo "    To start a new repository, execute these commands:"
    echo "        git clone ROSE_REPO_URL rose"
    echo "        cd rose"
    echo "        git submodule init"
    echo "        ${EDITOR-vi} .git/config # edit the URL for the EDG submodule"
    echo "        git submodule update"
    echo "    After you do this, this smgit launcher script should work."
    echo
    echo "    Alternatively, you can run a temporary copy of the smgit perl script"
    echo "    (i.e., scripts/smgit) found in most any existing ROSE Git repository. The"
    echo "    command is:"
    echo "        smgit clone ROSE_REPO_URL rose"
    #     --------------------------------------------------------------------------------
    exit 1
fi

# Run smgit if possible
if [ "$branch" = "workdir" ]; then
    echo "smgit_launcher: running smgit from working dir: $rose/scripts/smgit" >&2
    exec perl $rose/scripts/smgit --name="$0" "$@"
    exit 1
elif (cd $rose && git rev-parse $branch:scripts/smgit) >/dev/null 2>&1; then
    echo "smgit_launcher: running smgit from $branch..."
    exec perl <(cd $rose && git show $branch:scripts/smgit) --name="$0" "$@"
    exit 1
else
    echo "smgit_launcher: cannot find the real smgit perl script" >&2
    exit 1
fi
