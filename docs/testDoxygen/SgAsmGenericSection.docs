/* -*- c -*- */
/** @class SgAsmGenericSection
 *
 *  The SgAsmGenericSection represents any contiguous region of a file that serves a particular purpose. Not only are ELF and
 *  PE Sections represented by SgAsmGenericSection, but also such things as file headers, segment/section tables, etc. */

/** @var rose_addr_t SgAsmGenericSection::p_mapped_preferred_rva
 *
 *  This is the relative virtual address where the section prefers to be mapped. The RVA where the section will ultimately be
 *  mapped by the loader might be different due to file and/or memory alignment constraints and conflicts with other sections. */

/** @var rose_addr_t SgAsmGenericSection::p_mapped_actual_rva
 *
 *  This is the address where ROSE simulates a loader mapping the section. The actual mapping is sometimes different than the
 *  preferred mapping indicated in the section table due to file and/or memory alignment constraints or conflicts with other
 *  sections.  The only place values are assigned to this data member is in the Loader class and subclasses thereof. */

/** @var bool SgAsmGenericSection::p_contains_code
 *
 *  If a section is known to contain code then this data member is set.  Part of the process of parsing a binary file is to
 *  look at the symbol tables and if any function symbol points into a section then the entire section is marked as containing
 *  code.  This is necessary because ELF Object Files (*.o files) contain one ELF Section per function, none of which have a
 *  memory mapping specification.  By marking those sections as containing code, the LoaderELFObj class, knows that the
 *  section should be mapped to virtual memory for disassembly. */
