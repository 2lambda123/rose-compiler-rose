include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs

# DQ "config" and "src" must preceed any other directories, and 
# "tutorial" and "exampleTranslators" must preceed "docs" since 
# they generate data that is subsequently used in the generated 
# documentation.
# SUBDIRS = config tools proposals scripts
# SUBDIRS = config src projects tests tutorial exampleTranslators docs developersScratchSpace tools proposals scripts
# SUBDIRS = config src projects tests
# SUBDIRS = config src tests
SUBDIRS = config src projects tests tutorial exampleTranslators docs developersScratchSpace tools proposals scripts

## Generate fast compression while we test the configuration 
GZIP_ENV = --fast

# DQ (1/13/207): Automake option to use non-posix tar and permit 
# use of filenames greater than 100 characters.
# (typical value generated by automake) am__tar = ${AMTAR} -chof - "$$tardir"
# am__tar = ${AMTAR} --format=gnu -chf - "$$tardir"
# am__tar = ${AMTAR} -chf - "$$tardir"
am__tar = ${AMTAR} @ROSE_TAR_OPTIONS@ - "$$tardir"

ACLOCAL_AMFLAGS = -I ./config -I ./acmacros -I /usr/share/aclocal

# Force rose.docs to be make by default 
# (if rose.docs.in is modified)
all-local: rose.docs

# DQ (6/29/2004): I don't think we need this!
# LIBS = @LIBS@ ${SAGE_LIBS}

# It seems that it is better to handle the config directory with its own Makefile.am
# This allows us to hide autoconf accessory files (config.guess, etc.)
# Copy the config directory to the distribution: why?
# (because it has the file: config/Makefile.for.ROSE.includes.and.libs)
# EXTRA_DIST = stamp-h.in stamp-h1.in GNU_HEADERS config
# EXTRA_DIST = stamp-h.in stamp-h1.in rose.docs.in GNU_HEADERS COPYWRITE ROSE_ResearchPapers
EXTRA_DIST = stamp-h.in stamp-h1.in rose.docs.in COPYRIGHT ROSE_ResearchPapers NOTES_FOR_OSX OpenFortranParser.jar

# At some point we want to put tals into the distribution (likely just PDF files, but not yet).
# ROSE_Talks

# clean-local explanation:
# Remove template repositories.  No source code is compiled, but configuration
#   tests may have created template repositories here.
clean-local:
	rm -rf Templates.DB ii_files ti_files *.csv

# DQ (9/8/2006): Modified to remove backend specific header files
uninstall-local:
	rm -rf $(DESTDIR)$(includedir)/*_HEADERS $(DESTDIR)$(bindir)/pdflib-config

clean-stl:
	@echo "This fixes a common stl problem when the ROSE grammars are rebuilt \"false is not defined\""
	@echo "    running cd ROSETTA/src; make clean;"
	@cd ROSETTA/src; $(MAKE) clean;

distclean-local:
	-rm -rf $(top_builddir)/include-staging/

# DQ (12/3/2007): Added rose_paths.h so that it would be copied to the install tree.
nodist_include_HEADERS = rose_config.h rose_paths.h

include $(top_srcdir)/config/build_rose_paths.Makefile

check-local:
	@echo '************************************************************'
	@echo '****** make check rule complete (terminated normally) ******'
	@echo '************************************************************'

install-exec-local:
	@echo '*****************************************************************'
	@echo '***** make install-exec rule complete (terminated normally) *****'
	@echo '*****************************************************************'

install-data-local:
	-rm -rf $(DESTDIR)$(includedir)/*_HEADERS
	cp -R $(top_builddir)/include-staging/* $(DESTDIR)$(includedir)/
	@echo '*****************************************************************'
	@echo '***** make install-data rule complete (terminated normally) *****'
	@echo '*****************************************************************'

# DQ (7/22/2004): Need to be able to remove the REQUIRED_LIBS also!
# Note that uninstall-hook does not work, but uninstall-local does.
# uninstall-local:
#	rm -f $(DESTDIR)$(libdir)/libedg.so
#	rm -f $(DESTDIR)$(libdir)/librose.so
#	@echo "************************************************************"
#	@echo "**** make uninstall rule complete (terminated normally) ****"
#	@echo "************************************************************"

# DQ (4/22/2005): Set this so that make distcheck will use the same 
# --with-edg_source_code=true/false option as were used at configure.
# JJW (5/14/2008): Add the Boost flag the same way, using an internal
# variable from AX_BOOST_* to find the argument to --with-boost when
# this copy of ROSE was originally configured.
DISTCHECK_CONFIGURE_FLAGS = --with-edg_source_code=$(with_edg_source_code) --with-boost=$(ac_boost_path)

# DQ (4/22/2005): To make clear when binaries are in the distribution as 
# opposed to EDG source code we rename the final gnerated distribution.
rename_distribution:
	@echo "DISTCHECK_CONFIGURE_FLAGS = $(DISTCHECK_CONFIGURE_FLAGS)"
	@if test "$(with_edg_source_code)" = true; then \
	  echo "ROSE distribution built using EDG source code (with_edg_source_code = $(with_edg_source_code))"; \
     new_name="$(distdir)-with-EDG-source.tar.gz"; \
     echo "copying $(distdir).tar.gz to $$new_name"; \
     cp $(distdir).tar.gz $$new_name; \
	else \
     echo "ROSE distribution built using binaries in place of EDG source code (with_edg_source_code = $(with_edg_source_code))"; \
     new_name="$(distdir)-with-EDG-binaries.tar.gz"; \
     echo "copying $(distdir).tar.gz to $$new_name"; \
     cp $(distdir).tar.gz $$new_name; \
   fi

# Automake hook-ish rule to be run after dist rule (but hook runs before gzip so we can't use hook)
# We could build out own ROSE specific wrapper for dist and distcheck.
dist-after:
	@echo "Running dist hook rule ..."
	@$(MAKE) rename_distribution

# hook rule to be run after distcheck rule
distcheck-after:
	@echo "Running distcheck hook rule ..."
	@$(MAKE) rename_distribution

DISTCLEANFILES = rose_paths.h

# New rule to simplify generation of documentation (we want to avoid using the
# automake generated "docs" rule because the generation of documentation is
# dependent upon separate tools which the user might not have available
# (true for bothe the LaTeX and html documentation).
# DQ (7/23/2004): Since there is a "docs" subdirectory we need to force the build!
FORCE_DOCS_TO_BE_MADE:
docs: FORCE_DOCS_TO_BE_MADE
	@echo "    Generate all possible documentation cd docs; make documentation;"
	@cd tutorial; $(MAKE) docs;
	@cd docs; $(MAKE) docs;
	@cd projects/compass; $(MAKE) docs;

